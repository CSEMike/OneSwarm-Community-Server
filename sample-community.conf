
####################################################
# Database configuration
####################################################

db.host=127.0.0.1
db.port=3306
db.name=community_db
db.user=USERNAME_GOES_HERE
db.password=PASSWORD_GOES_HERE

## Where to store the generated scratch jdbc
## properties file. 
## ! --------------------------------------------------
## NOTE: updating this value also requires updating the 
## JDBC config path in war/WEB-INF/jetty-web.xml
## ! --------------------------------------------------
## Also, on windows, paths need to be escaped, e.g., 
## C\:\\Temp\\jdbc.properties
jdbc.properties=/tmp/jdbc.properties

####################################################
# Server configuration
####################################################

port=8081
# replace this with your hostname
host=127.0.0.1

## A path to a directory for storing NCSA-style request logs
## NOTE: on windows, paths need to be escaped, e.g., 
## C\:\\Temp
#request.log.directory=/tmp

## If logging is enabled, how long should logs be retained
#request.log.retain.days=7

## The number of minutes between client back-to-back client refresh requests
#oneswarm.community.refresh.interval=10

## The maximum number of friends to be returned for standard community server requests
#max.friends.to.return=26

## Number of swarms per-page in search results, etc.
#swarms.per.page=30

## When returning friend lists, include both the nickname and the username of the registrant.
#include.username.with.nickname=false

## Keys that have not refreshed in this amount of time will be dropped 
## from the list of active keys
#user.expiration.seconds=86400

## The number of concurrent threads for handling incoming connections
#max.threads=30

## The name shown to clients
#community.server.name=OneSwarm Community Server

####################################################
# RSS
####################################################

## Enable RSS feeds
#enable.rss.feeds=false

## The base URL to use for RSS feeds. 
#rss.base.url=http://your.url.here.invalid/

####################################################
# Server options
####################################################

##Changes the friend matching policy of the server. Instead of returning 
##friends randomly, the server w ill return: 
## 1). All keys (if registered) from the keys file to all users and 
## 2). Divide up the registered users among only the users with keys in the keys file. 
## This enables a trusted set of intermediaries to mediate all sharing for 
## users of the community server.
#infrastructure.peers=keys.txt

####################################################
# Access control
####################################################

## Require users to authenticate using a valid account  
## in order to register keys and request friend lists 
#require.auth.for.key.registration=false

## Require users to authenticate using a valid account 
## in order to publish swarms
#require.auth.for.publish=true

## Allow users (not just moderators) to publish. 
#allow.user.publishing=true

## Allow account creation (other than by administrator).
#allow.signup=true

## Require users to complete a CAPTCHA during signup.
#signup.requires.captcha=true

## If true, submitted swarms will not be shown to users 
## until reviewed by a moderator.
#require.swarm.moderation=false

## If false, store magnet links only. Discard piece data, etc.
#store.torrents=false

## Disallow all comments, even for registered users.
#disable.user.comments=false

## Discard submitted previews
#discard.previews=false

## Store submitted previews, but do not show them to users.
#dont.display.previews=false

## The default number of keys that can be registered by a single IP.
#key.registration.limit.ip.default=5

## The default key registration limit per account.
#key.registration.limit.account.default=5

## Run server using SSL. <keystore> is the path 
## to the java keystore storing the certificate.
## For more information on generating certificates, 
## check out: http://docs.codehaus.org/display/JETTY/How+to+configure+SSL
#ssl=path/to/keystore

## The password for accessing the SSL keystore. Alternately, this can be
## specified by setting the jetty.ssl.keypassword and jetty.ssl.password
## properties, or via prompts during server startup.
#keystore.password=password

## Requires login/password client authentication to 
## obtain a list of peers/keys
#auth.required=true

## Whitelist or blacklist IP address ranges from communicating with 
## this server. Format is a list of either address ranges or 
## prefixes, e.g.:
## 1.2.3.4-1.2.255.255
## 1.2.0.0/16
#ip.whitelist=whitelist.txt
#ip.blacklist=blacklist.txt

####################################################
# Misc
####################################################

## Enable stats collecting by providing an address to 
## to a ganglia monitoring host / port. 
## see: http://ganglia.info/, works with Ganglia 3.0.x only. 
## Collected stats:
## os_cs_keys_registered : Number of registered keys
## os_cs_users_online: Number of users currently online
## os_cs_ram_used: Amount of ram used by server
#ganglia.host=10.0.1.100
#ganglia.port=8649
